      <div class="jumbotron">
        <h2>一字千金 軌跡錄影程式</h2>
      </div>
      <div class="row">
        <% @range.each do |x| %>
        <div class="col-md-3">
          <div><%= x %>號參賽者</div>
          <div id="console_<%= x %>" style="border:1px solid black;line-height:95%;width:100%;height:200px;margin-bottom:12px;overflow:auto;"></div>
        </div>
        <% end %>
      </div>
        
      <% content_for :javascripts do %>
      <%= javascript_include_tag 'pinhole' %>
      <script>

      var preActionCount = 0;
      var fileSaveActionCount = 0;
      var delayTime = 60;

      $(document).ready(function() {
        CR.prop({
          width: 500,
          height: 500,
          lineWidth: 15,
          lineColor: '#333333',
          frameRate: 50,
          backgroundImage: '/assets/block-524.png'
        });

        for(var i = 1;i <= <%= @count %>;i++){
          CR.reg(i.toString());
        }
        //window.pinhole = new Pinhole('0');
        window.pinhole = new Pinhole('record');
		    window.pinhole.bindEvents();
		
        window.stopCallBack = function(uid) {
          var scope = window.pinhole;
          var element = $("#console_"+uid);
          var pre = element.html();
          element.html(pre + 'STOP<br/>');
          return function(data) {
            
            setTimeout((function(dispatcher, id){
              return function(){
                dispatcher.trigger("open_file", {
                  user_id: id
                });
              };
            })(scope.dispatcher, uid), fileSaveActionCount++ * delayTime);


            for (var i = 0, len = data.length; i < len; i++){
              var frameInfo = {
                user_id: uid, 
                timestamp: data[i].stamp.toString(), 
                base64: data[i].base64.split(',')[1]
              };
              setTimeout((function(dispatcher, obj){
                return function(){
                  dispatcher.trigger("save_file", obj);
                };
              })(scope.dispatcher, frameInfo), fileSaveActionCount++ * delayTime);

            }

            setTimeout((function(dispatcher, id){
              return function(){
                dispatcher.trigger("close_file", {
                  user_id: id
                });
              };
            })(scope.dispatcher, uid), fileSaveActionCount++ * delayTime);

            /*
            var i, len;
            scope.dispatcher.trigger("open_file", {
              user_id: uid
            });
            i = 0;
            len = data.length;
            while (i < len) {
              setTimeout((function(dispatcher, last, obj){
                return function(){
                  dispatcher.trigger("save_file", obj);
                  if(last){
                    dispatcher.trigger("close_file", {user_id: obj.user_id});
                  }
                };
              })(scope.dispatcher, (i + 1 == len), {
                user_id: uid, 
                timestamp: data[i].stamp.toString(), 
                base64: data[i].base64.split(',')[1]
              }), fileSaveActionCount * 60);
              
              fileSaveActionCount++;
              i++;
            }
            */

          };
        };

        setInterval(function(){
          if(fileSaveActionCount == preActionCount){
            fileSaveActionCount = preActionCount = 0;
          }else{
            preActionCount = fileSaveActionCount;
          }
        },1300);

        window.startCallBack = function(){
          var id = this.id_;
          var element = $("#console_"+id);
          var pre = element.html();
          element.html(pre + 'START<br/>');
        }

        window.writeToLog = function(pt){
          var id = this.id_;
          var element = $("#console_"+id);
          var pre = element.html();
          element.html(pre + 'stamp:'+pt.stamp + ' x:' + pt.x + ' y:' + pt.y + '<br/>');
        };
      

      });
      </script>
      <% end %>